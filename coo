package com.albertsons.meitem.service.itemv2;

import com.albertsons.meitem.constants.GlobalConstants;
import com.albertsons.meitem.features.ItemFeatures;
import com.albertsons.meitem.interceptor.LoggingInterceptor;
import com.albertsons.meitem.model.mongo.maintenance.Attribute;
import com.albertsons.meitem.model.mongo.maintenance.Tab;
import com.albertsons.meitem.model.mongo.maintenance.TabModel;
import com.albertsons.meitem.repository.mongo.MaintainMetadataRepository;
import com.albertsons.meitem.response.maintenace.MaintenanceMetaDataResponse;
import com.albertsons.meitem.utils.RequestContextManager;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.ArgumentMatchers;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;
import org.togglz.core.manager.FeatureManager;
@ExtendWith(MockitoExtension.class)
public class MaintenaceMetaServiceImplTest {
    @Mock
    private MaintainMetadataRepository maintainMetadataRepository;


    @Mock
    private RequestContextManager requestContextManager;
    @InjectMocks
    private MaintenanceMetaDataServiceImpl maintenanceMetaService;
    private LoggingInterceptor loggingInterceptorMock;

    @Mock
    private FeatureManager featureManager;

    @BeforeEach
    void setup() {
        loggingInterceptorMock = mock(LoggingInterceptor.class);
        RequestContextManager.loggingInterceptor = loggingInterceptorMock;
    }

    @Test
    public void testGetMaintenanceMeta_Success() {
        when(featureManager.isActive(ArgumentMatchers.any(ItemFeatures.class))).thenReturn(true);
        when(RequestContextManager.getValue(GlobalConstants.AUTHROLE)).thenReturn("VENDOR");
        TabModel tabsCollection = tabsCollection();
        when(maintainMetadataRepository.findByTabsAttributesIsEditableByContaining("VENDOR")).thenReturn(Collections.singletonList(tabsCollection));
        MaintenanceMetaDataResponse response = maintenanceMetaService.getMaintenanceMeta();
        verify(maintainMetadataRepository, times(1)).findByTabsAttributesIsEditableByContaining("VENDOR");
    }

    @Test
    public void testGetMaintenanceMeta_ExceptionqInRepositoryCall() {
        when(featureManager.isActive(ArgumentMatchers.any(ItemFeatures.class))).thenReturn(true);

        when(RequestContextManager.getValue(GlobalConstants.AUTHROLE)).thenReturn("ADMIN");

        when(maintainMetadataRepository.findByTabsAttributesIsEditableByContaining("ADMIN")).thenThrow(RuntimeException.class);

        assertThrows(RuntimeException.class, () -> maintenanceMetaService.getMaintenanceMeta());

        verify(maintainMetadataRepository, times(1)).findByTabsAttributesIsEditableByContaining("ADMIN");
    }

    @Test
    public void testFilterAttributesByEditableBy_ExqceptionInFiltering() {
        TabModel tabsCollection = tabsCollection();
        tabsCollection.getTabs().get(0).getAttributes().get(0).setIsEditableBy(null);

        assertThrows(RuntimeException.class, () -> maintenanceMetaService.filterAttributesByEditableBy(tabsCollection, "VENDOR"));
    }

    public TabModel tabsCollection() {
        TabModel tabsCollection = new TabModel();
        tabsCollection.setId("1");
        List<Tab> tab = new ArrayList<>();
        tab.add(tab());
        tabsCollection.setTabs(tab);

        return tabsCollection;
    }

    public Tab tab() {
        Tab tab = new Tab();
        tab.setName("test");
        List<Attribute> attr = new ArrayList<>();
        attr.add(attributes());
        tab.setAttributes(attr);
        return tab;
    }

    public Attribute attributes() {
        Attribute atr = new Attribute();
        atr.setCicImpacted(true);
        atr.setIsEditableBy(Arrays.asList("VENDOR", "VENDOR"));
        atr.setName("test");
        return atr;
    }
}
--------
import com.albertsons.meitem.constants.GlobalConstants;
import com.albertsons.meitem.features.ItemFeatures;
import com.albertsons.meitem.interceptor.LoggingInterceptor;
import com.albertsons.meitem.model.mongo.maintenance.Attribute;
import com.albertsons.meitem.model.mongo.maintenance.Tab;
import com.albertsons.meitem.model.mongo.maintenance.TabModel;
import com.albertsons.meitem.repository.mongo.MaintainMetadataRepository;
import com.albertsons.meitem.response.maintenace.MaintenanceMetaDataResponse;
import com.albertsons.meitem.service.itemv2.MaintenanceMetaDataServiceImpl;
import com.albertsons.meitem.utils.RequestContextManager;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.ArgumentMatchers;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.togglz.core.manager.FeatureManager;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
public class MaintenaceMetaServiceImplTest {

    @Mock
    private MaintainMetadataRepository maintainMetadataRepository;

    @Mock
    private RequestContextManager requestContextManager;

    @InjectMocks
    private MaintenanceMetaDataServiceImpl maintenanceMetaService;

    private LoggingInterceptor loggingInterceptorMock;

    @Mock
    private FeatureManager featureManager;

    @BeforeEach
    void setup() {
        loggingInterceptorMock = mock(LoggingInterceptor.class);
        RequestContextManager.loggingInterceptor = loggingInterceptorMock;
    }

    @Test
    public void testGetMaintenanceMeta_Success() {
        when(featureManager.isActive(ArgumentMatchers.any(ItemFeatures.class))).thenReturn(true);
        when(RequestContextManager.getValue(anyString())).thenReturn(Mockito.anyString());
        when(maintainMetadataRepository.findByTabsAttributesIsEditableByContaining(anyString())).thenReturn(Collections.singletonList(tabsCollection()));

        MaintenanceMetaDataResponse response = maintenanceMetaService.getMaintenanceMeta();

        verify(maintainMetadataRepository, times(1)).findByTabsAttributesIsEditableByContaining(anyString());
    }

    @Test
    public void testGetMaintenanceMeta_ExceptionInRepositoryCall() {
        when(featureManager.isActive(ArgumentMatchers.any(ItemFeatures.class))).thenReturn(true);
        when(RequestContextManager.getValue(anyString())).thenReturn(Mockito.anyString());
        when(maintainMetadataRepository.findByTabsAttributesIsEditableByContaining(anyString())).thenThrow(RuntimeException.class);

        assertThrows(RuntimeException.class, () -> maintenanceMetaService.getMaintenanceMeta());

        verify(maintainMetadataRepository, times(1)).findByTabsAttributesIsEditableByContaining(anyString());
    }

    @Test
    public void testFilterAttributesByEditableBy_ExceptionInFiltering() {
        TabModel tabsCollection = tabsCollection();
        tabsCollection.getTabs().get(0).getAttributes().get(0).setIsEditableBy(null);

        assertThrows(RuntimeException.class, () -> maintenanceMetaService.filterAttributesByEditableBy(tabsCollection, Mockito.anyString()));
    }

    private TabModel tabsCollection() {
        TabModel tabsCollection = new TabModel();
        tabsCollection.setId("1");
        List<Tab> tab = new ArrayList<>();
        tab.add(tab());
        tabsCollection.setTabs(tab);

        return tabsCollection;
    }

    private Tab tab() {
        Tab tab = new Tab();
        tab.setName("test");
        List<Attribute> attr = new ArrayList<>();
        attr.add(attributes());
        tab.setAttributes(attr);
        return tab;
    }

    private Attribute attributes() {
        Attribute atr = new Attribute();
        atr.setCicImpacted(true);
        atr.setIsEditableBy(Arrays.asList(Mockito.anyString(), Mockito.anyString()));
        atr.setName("test");
        return atr;
    }
}
--------------

org.mockito.exceptions.misusing.InvalidUseOfMatchersException: 
Invalid use of argument matchers!
1 matchers expected, 2 recorded:
-> at com.albertsons.meitem.service.itemv2.MaintenaceMetaServiceImplTest.testGetMaintenanceMeta_ExceptionqInRepositoryCall(MaintenaceMetaServiceImplTest.java:64)
-> at com.albertsons.meitem.service.itemv2.MaintenaceMetaServiceImplTest.testGetMaintenanceMeta_ExceptionqInRepositoryCall(MaintenaceMetaServiceImplTest.java:66)

This exception may occur if matchers are combined with raw values:
    //incorrect:
    someMethod(any(), "raw String");
When using matchers, all arguments have to be provided by matchers.
For example:
    //correct:
    someMethod(any(), eq("String by matcher"));

For more info see javadoc for Matchers class.

	at com.albertsons.meitem.service.itemv2.MaintenaceMetaServiceImplTest.testGetMaintenanceMeta_ExceptionqInRepositoryCall(MaintenaceMetaServiceImplTest.java:66)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)


org.mockito.exceptions.misusing.InvalidUseOfMatchersException: 
Invalid use of argument matchers!
1 matchers expected, 2 recorded:
-> at com.albertsons.meitem.service.itemv2.MaintenaceMetaServiceImplTest.testGetMaintenanceMeta_Succ1ess(MaintenaceMetaServiceImplTest.java:53)
-> at com.albertsons.meitem.service.itemv2.MaintenaceMetaServiceImplTest.testGetMaintenanceMeta_Succ1ess(MaintenaceMetaServiceImplTest.java:55)

This exception may occur if matchers are combined with raw values:
    //incorrect:
    someMethod(any(), "raw String");
When using matchers, all arguments have to be provided by matchers.
For example:
    //correct:
    someMethod(any(), eq("String by matcher"));

For more info see javadoc for Matchers class.

	at com.albertsons.meitem.service.itemv2.MaintenaceMetaServiceImplTest.testGetMaintenanceMeta_Succ1ess(MaintenaceMetaServiceImplTest.java:55)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)


org.mockito.exceptions.misusing.InvalidUseOfMatchersException: 
Invalid use of argument matchers!
1 matchers expected, 2 recorded:
-> at com.albertsons.meitem.service.itemv2.MaintenaceMetaServiceImplTest.testGetMaintenanceMeta_Success(MaintenaceMetaServiceImplTest.java:110)
-> at com.albertsons.meitem.service.itemv2.MaintenaceMetaServiceImplTest.testGetMaintenanceMeta_Success(MaintenaceMetaServiceImplTest.java:111)

This exception may occur if matchers are combined with raw values:
    //incorrect:
    someMethod(any(), "raw String");
When using matchers, all arguments have to be provided by matchers.
For example:
    //correct:
    someMethod(any(), eq("String by matcher"));

For more info see javadoc for Matchers class.

	at com.albertsons.meitem.service.itemv2.MaintenaceMetaServiceImplTest.testGetMaintenanceMeta_Success(MaintenaceMetaServiceImplTest.java:111)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)

17:07:17.829 [Test worker] ERROR com.albertsons.meitem.service.itemv2.MaintenanceMetaDataServiceImpl -- Error while filterting Maintenance Info: 
java.lang.NullPointerException: Cannot invoke "java.util.List.contains(Object)" because the return value of "com.albertsons.meitem.model.mongo.maintenance.Attribute.getIsEditableBy()" is null
	at com.albertsons.meitem.service.itemv2.MaintenanceMetaDataServiceImpl.lambda$filterAttributesByEditableBy$4(MaintenanceMetaDataServiceImpl.java:74)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:178)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at com.albertsons.meitem.service.itemv2.MaintenanceMetaDataServiceImpl.lambda$filterAttributesByEditableBy$5(MaintenanceMetaDataServiceImpl.java:74)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at com.albertsons.meitem.service.itemv2.MaintenanceMetaDataServiceImpl.filterAttributesByEditableBy(MaintenanceMetaDataServiceImpl.java:77)
	at com.albertsons.meitem.service.itemv2.MaintenaceMetaServiceImplTest.lambda$testFilterAttributesByEditableBy_ExqceptionInFiltering$1(MaintenaceMetaServiceImplTest.java:78)
	at org.junit.jupiter.api.AssertThrows.assertThrows(AssertThrows.java:53)
	at org.junit.jupiter.api.AssertThrows.assertThrows(AssertThrows.java:35)
	at org.junit.jupiter.api.Assertions.assertThrows(Assertions.java:3083)
	at com.albertsons.meitem.service.itemv2.MaintenaceMetaServiceImplTest.testFilterAttributesByEditableBy_ExqceptionInFiltering(MaintenaceMetaServiceImplTest.java:78)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:217)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:213)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy2/jdk.proxy2.$Proxy5.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)

org.mockito.exceptions.misusing.InvalidUseOfMatchersException: 
Misplaced or misused argument matcher detected here:

-> at com.albertsons.meitem.service.itemv2.MaintenaceMetaServiceImplTest.lambda$testFilterAttributesByEditableBy_ExqceptionInFiltering$1(MaintenaceMetaServiceImplTest.java:78)

You cannot use argument matchers outside of verification or stubbing.
Examples of correct usage of argument matchers:
    when(mock.get(anyInt())).thenReturn(null);
    doThrow(new RuntimeException()).when(mock).someVoidMethod(any());
    verify(mock).someMethod(contains("foo"))

This message may appear after an NullPointerException if the last matcher is returning an object 
like any() but the stubbed method signature expect a primitive argument, in this case,
use primitive alternatives.
    when(mock.get(any())); // bad use, will raise NPE
    when(mock.get(anyInt())); // correct usage use

Also, this error might show up because you use argument matchers with methods that cannot be mocked.
Following methods *cannot* be stubbed/verified: final/private/equals()/hashCode().
Mocking methods declared on non-public parent classes is not supported.

	at org.mockito.junit.jupiter.MockitoExtension.afterEach(MockitoExtension.java:192)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)

17:07:17.941 [Test worker] ERROR com.albertsons.meitem.service.itemv2.MaintenanceMetaDataServiceImpl -- Error while filterting Maintenance Info: 
java.lang.NullPointerException: Cannot invoke "java.util.List.contains(Object)" because the return value of "com.albertsons.meitem.model.mongo.maintenance.Attribute.getIsEditableBy()" is null
	at com.albertsons.meitem.service.itemv2.MaintenanceMetaDataServiceImpl.lambda$filterAttributesByEditableBy$4(MaintenanceMetaDataServiceImpl.java:74)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:178)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at com.albertsons.meitem.service.itemv2.MaintenanceMetaDataServiceImpl.lambda$filterAttributesByEditableBy$5(MaintenanceMetaDataServiceImpl.java:74)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at com.albertsons.meitem.service.itemv2.MaintenanceMetaDataServiceImpl.filterAttributesByEditableBy(MaintenanceMetaDataServiceImpl.java:77)
	at com.albertsons.meitem.service.itemv2.MaintenaceMetaServiceImplTest.lambda$testFilterAttributesByEditableBy_ExceptionInFiltering$3(MaintenaceMetaServiceImplTest.java:134)
	at org.junit.jupiter.api.AssertThrows.assertThrows(AssertThrows.java:53)
	at org.junit.jupiter.api.AssertThrows.assertThrows(AssertThrows.java:35)
	at org.junit.jupiter.api.Assertions.assertThrows(Assertions.java:3083)
	at com.albertsons.meitem.service.itemv2.MaintenaceMetaServiceImplTest.testFilterAttributesByEditableBy_ExceptionInFiltering(MaintenaceMetaServiceImplTest.java:134)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:217)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:213)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy2/jdk.proxy2.$Proxy5.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)

org.mockito.exceptions.misusing.InvalidUseOfMatchersException: 
Misplaced or misused argument matcher detected here:

-> at com.albertsons.meitem.service.itemv2.MaintenaceMetaServiceImplTest.lambda$testFilterAttributesByEditableBy_ExceptionInFiltering$3(MaintenaceMetaServiceImplTest.java:134)

You cannot use argument matchers outside of verification or stubbing.
Examples of correct usage of argument matchers:
    when(mock.get(anyInt())).thenReturn(null);
    doThrow(new RuntimeException()).when(mock).someVoidMethod(any());
    verify(mock).someMethod(contains("foo"))

This message may appear after an NullPointerException if the last matcher is returning an object 
like any() but the stubbed method signature expect a primitive argument, in this case,
use primitive alternatives.
    when(mock.get(any())); // bad use, will raise NPE
    when(mock.get(anyInt())); // correct usage use

Also, this error might show up because you use argument matchers with methods that cannot be mocked.
Following methods *cannot* be stubbed/verified: final/private/equals()/hashCode().
Mocking methods declared on non-public parent classes is not supported.

	at org.mockito.junit.jupiter.MockitoExtension.afterEach(MockitoExtension.java:192)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)


org.mockito.exceptions.misusing.InvalidUseOfMatchersException: 
Invalid use of argument matchers!
1 matchers expected, 2 recorded:
-> at com.albertsons.meitem.service.itemv2.MaintenaceMetaServiceImplTest.testGetMaintenanceMeta_ExceptionInRepositoryCall(MaintenaceMetaServiceImplTest.java:121)
-> at com.albertsons.meitem.service.itemv2.MaintenaceMetaServiceImplTest.testGetMaintenanceMeta_ExceptionInRepositoryCall(MaintenaceMetaServiceImplTest.java:122)

This exception may occur if matchers are combined with raw values:
    //incorrect:
    someMethod(any(), "raw String");
When using matchers, all arguments have to be provided by matchers.
For example:
    //correct:
    someMethod(any(), eq("String by matcher"));

For more info see javadoc for Matchers class.

	at com.albertsons.meitem.service.itemv2.MaintenaceMetaServiceImplTest.testGetMaintenanceMeta_ExceptionInRepositoryCall(MaintenaceMetaServiceImplTest.java:122)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)

--------------
import com.albertsons.meitem.model.mongo.maintenance.Attribute;
import com.albertsons.meitem.repository.itemv2.MaintenanceMetaRepository;
import com.albertsons.meitem.service.itemv2.MaintenanceMetaDataService;
import com.albertsons.meitem.service.itemv2.MaintenanceMetaDataServiceImpl;
import com.albertsons.meitem.service.itemv2.MaintenanceMetaService;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;

import java.util.Arrays;
import java.util.List;

import static org.junit.jupiter.api.Assertions.assertThrows;
import static org.mockito.ArgumentMatchers.anyString;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
public class MaintenaceMetaServiceImplTest {

    @Mock
    private MaintenanceMetaRepository repositoryMock;

    @InjectMocks
    private MaintenanceMetaDataService metaDataService = new MaintenanceMetaDataServiceImpl();

    private MaintenanceMetaService metaService;

    @BeforeEach
    public void setUp() {
        metaService = new MaintenanceMetaServiceImpl(repositoryMock);
    }

    @Test
    public void testGetMaintenanceMeta_Success() {
        // Arrange
        List<Attribute> attributes = Arrays.asList(
                new Attribute("attr1", Arrays.asList("role1")),
                new Attribute("attr2", Arrays.asList("role2"))
        );
        when(repositoryMock.getMaintenanceMeta(anyString())).thenReturn(attributes);

        // Act
        List<Attribute> result = metaService.getMaintenanceMeta("123");

        // Assert
        verify(repositoryMock, times(1)).getMaintenanceMeta(anyString());
        assert result != null;
        assert result.size() == 2;
    }

    @Test
    public void testGetMaintenanceMeta_ExceptionInRepositoryCall() {
        // Arrange
        when(repositoryMock.getMaintenanceMeta(anyString())).thenThrow(new RuntimeException("Repository exception"));

        // Act & Assert
        assertThrows(RuntimeException.class, () -> metaService.getMaintenanceMeta("123"));
    }

    @Test
    public void testFilterAttributesByEditableBy_Success() {
        // Arrange
        List<Attribute> attributes = Arrays.asList(
                new Attribute("attr1", Arrays.asList("role1")),
                new Attribute("attr2", null) // Simulate a case where isEditableBy is null
        );

        // Act
        List<Attribute> filteredAttributes = metaDataService.filterAttributesByEditableBy(attributes, "role1");

        // Assert
        assert filteredAttributes != null;
        assert filteredAttributes.size() == 1;
        assert filteredAttributes.get(0).getName().equals("attr1");
    }

    @Test
    public void testFilterAttributesByEditableBy_ExceptionInFiltering() {
        // Arrange
        List<Attribute> attributes = Arrays.asList(
                new Attribute("attr1", Arrays.asList("role1")),
                new Attribute("attr2", null) // Simulate a case where isEditableBy is null
        );

        // Act & Assert
        assertThrows(NullPointerException.class, () -> metaDataService.filterAttributesByEditableBy(attributes, "role2"));
    }
}

